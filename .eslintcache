[{"/home/helloworld/react/gitcommit/src/index.js":"1","/home/helloworld/react/gitcommit/src/App.js":"2","/home/helloworld/react/gitcommit/src/services/apollo-client.js":"3","/home/helloworld/react/gitcommit/src/components/details-commit.js":"4","/home/helloworld/react/gitcommit/src/components/list-commits.js":"5","/home/helloworld/react/gitcommit/src/services/queries.js":"6","/home/helloworld/react/gitcommit/src/components/user-details.js":"7"},{"size":587,"mtime":1611359634349,"results":"8","hashOfConfig":"9"},{"size":595,"mtime":1611359634349,"results":"10","hashOfConfig":"9"},{"size":228,"mtime":1611359634349,"results":"11","hashOfConfig":"9"},{"size":2736,"mtime":1611359634349,"results":"12","hashOfConfig":"9"},{"size":6108,"mtime":1611359634349,"results":"13","hashOfConfig":"9"},{"size":1841,"mtime":1611359634349,"results":"14","hashOfConfig":"9"},{"size":2933,"mtime":1611359634349,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ne94or",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/home/helloworld/react/gitcommit/src/index.js",[],["32","33"],"/home/helloworld/react/gitcommit/src/App.js",[],"/home/helloworld/react/gitcommit/src/services/apollo-client.js",[],"/home/helloworld/react/gitcommit/src/components/details-commit.js",[],"/home/helloworld/react/gitcommit/src/components/list-commits.js",[],"/home/helloworld/react/gitcommit/src/services/queries.js",[],"/home/helloworld/react/gitcommit/src/components/user-details.js",["34","35"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { user_info } from \"../services/queries\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function UserDetails(props) {\n  const UserId = props.id;\n\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const { loading, data } = useQuery(user_info, {\n    variables: {\n      author: {\n        id: UserId,\n      },\n    },\n  });\n\n  if (loading) return <p>Loading...</p>;\n\n  const VerifyLocation = data.repository.object.history.edges.map(\n    (loc) => loc.node.author.user.location\n  );\n  const VerifyEmail = data.repository.object.history.edges.map(\n    (mail) => mail.node.author.user.email\n  );\n  const VerifyBio = data.repository.object.history.edges.map(\n    (bio) => bio.node.author.user.bio\n  );\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <List>\n        <ListItem>\n          <ListItemText\n            primary=\"Bio\"\n            secondary={VerifyBio === \"\" ? \"not mentioned\" : VerifyBio}\n          />\n        </ListItem>\n\n        <ListItem>\n          <ListItemText\n            primary=\"Login\"\n            secondary={data.repository.object.history.edges.map(\n              (e) => e.node.author.user.login\n            )}\n          />\n        </ListItem>\n\n        <ListItem>\n          <ListItemText\n            primary=\"Location\"\n            secondary={VerifyLocation == \"\" ? \"not mentioned\" : VerifyLocation}\n          />\n        </ListItem>\n\n        <ListItem>\n          <ListItemText\n            primary=\"Email\"\n            secondary={VerifyEmail == \"\" ? \"not mentioned\" : VerifyEmail}\n          />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      <button type=\"button\" onClick={() => handleOpen()}>\n        User Info\n      </button>\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":93,"column":39,"nodeType":"42","messageId":"43","endLine":93,"endColumn":41},{"ruleId":"40","severity":1,"message":"41","line":100,"column":36,"nodeType":"42","messageId":"43","endLine":100,"endColumn":38},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]